<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title></title>
    <link rel="self" type="application/atom+xml" href="https://noamf.ink/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://noamf.ink"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-02-08T00:00:00+00:00</updated>
    <id>https://noamf.ink/atom.xml</id>
    <entry xml:lang="en">
        <title>Datasets for Document AI</title>
        <published>2024-02-08T00:00:00+00:00</published>
        <updated>2024-02-08T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://noamf.ink/posts/pdf-parsing-datasets/"/>
        <id>https://noamf.ink/posts/pdf-parsing-datasets/</id>
        
        <content type="html" xml:base="https://noamf.ink/posts/pdf-parsing-datasets/">&lt;p&gt;This post will aim to provide an overview of real and synthetic datasets available for training
Document AI models, with a focus on PDF documents. This is the second post in a
&lt;a href=&quot;https:&#x2F;&#x2F;noamf.ink&#x2F;posts&#x2F;pdf-parsing-series-intro&#x2F;&quot;&gt;series&lt;&#x2F;a&gt; on document parsing. The &lt;a href=&quot;https:&#x2F;&#x2F;noamf.ink&#x2F;posts&#x2F;pdf-parsing-tasks&#x2F;&quot;&gt;previous
post&lt;&#x2F;a&gt; about explored a number of datasets used in
benchmarking tasks. This post will focus on datasets used to train foundation models, which requires
more data than can exist in annotated datasets used in benchmarking.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;pdf-datasets&quot;&gt;PDF datasets&lt;&#x2F;h4&gt;
&lt;p&gt;There are a lot of easily-accessible PDFs in the world, so the main benefit of these datasets is
that someone else has gone through the effort of collecting them in one place. Some PDF datasets are
grouped by type.&lt;&#x2F;p&gt;
&lt;p&gt;PDFs can be either scanned or native. Native PDFs contain digital information about characters and
other visual markings. Scanned PDFs can be thought of as images, in the sense that they encode
pixel-level data, but no higher-level information about the contents of the document. Native PDFs
can easily be converted into &amp;quot;scanned&amp;quot; PDFs by applying visual filters that replicate artifacts from
the scanning process. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sparkfish&#x2F;augraphy&quot;&gt;Augraphy&lt;&#x2F;a&gt; is a great tool for this.&lt;&#x2F;p&gt;
&lt;p&gt;This idea is illustrated by the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sparkfish&#x2F;shabby-pages&quot;&gt;shabby pages&lt;&#x2F;a&gt; dataset,
which contains about ~6,000 native documents that have been artificially altered to simulate
scanning or faxing. The advantage of this kind of manipulation is that the ground truth is
available. The manipulations were done with Augraphy, linked above.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;machine-intelligence-laboratory&#x2F;DDI-100&quot;&gt;DDI-100&lt;&#x2F;a&gt; dataset began with ~6,500
real document pages, and constructed various altered versions to arrive at ~100,000 page images.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;www.nist.gov&#x2F;srd&#x2F;nist-special-database-2&quot;&gt;SFRS&lt;&#x2F;a&gt; dataset has ~5,500 document images of
tax forms from 1988. &amp;quot;The document images in this database appear to be real forms prepared by
individuals, but the images have been automatically derived and synthesized using a computer.&amp;quot; In
other words, the real original filled-in values seem to have been overwritten by synthetically
generated values. This dataset can be thought of as a synthetic
&lt;a href=&quot;https:&#x2F;&#x2F;noamf.ink&#x2F;posts&#x2F;pdf-parsing-tasks&#x2F;#forms-parsing&quot;&gt;form parsing&lt;&#x2F;a&gt; dataset. I haven&#x27;t been able
to find a direct download link; I&#x27;ll update here when I hear back from the NIST &amp;quot;scientific contact&amp;quot;
for the database.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tpn&#x2F;pdfs&#x2F;&quot;&gt;pdfs&lt;&#x2F;a&gt; repository on github is a collection of ~1,700
&amp;quot;technically-oriented&amp;quot; PDFs. They seem to be mostly native PDFs, which could similarly be digitally
altered.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;data.nist.gov&#x2F;od&#x2F;id&#x2F;mds2-2531&quot;&gt;IIT CDIP&lt;&#x2F;a&gt; dataset has a large number of legal documents
from the state of Illinois&#x27; &amp;quot;lawsuits against tobacco companies in the 1990s&amp;quot;. The website says
there are ~7,000,000 documents, but other sources (such as the
&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;2111.15664.pdf&quot;&gt;DONUT paper&lt;&#x2F;a&gt;) put the number at ~11,000,000.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;www.kaggle.com&#x2F;search?q=PDF+data+datasetFileTypes%3Apdf+datasetSize%3Amedium+datasetSize%3Alarge&quot;&gt;kaggle dataset collection&lt;&#x2F;a&gt; 
has a number of PDF datasets, most have in the hundreds of files. Note that the preceding link
filters to datasets that have at least one PDF, but that PDF is sometimes a user agreement or a data
dictionary. There is no way to filter to datasets that contain only PDF files.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;huggingface.co&#x2F;datasets?sort=downloads&amp;amp;search=PDF&quot;&gt;hugging face dataset collection&lt;&#x2F;a&gt;
allows for search by dataset name but not dataset type.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, the &lt;a href=&quot;https:&#x2F;&#x2F;paperswithcode.com&#x2F;datasets?q=PDF+Document&amp;amp;v=lst&amp;amp;o=match&quot;&gt;papers with code&lt;&#x2F;a&gt;
dataset list has similar functionality.&lt;&#x2F;p&gt;
&lt;p&gt;All three of those dataset collections seem to have relevant datasets, though they are mostly on the
smaller side. Unlike the other two, papers with code does not host the datasets it lists.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;synthetic-pdf-pipelines&quot;&gt;Synthetic PDF pipelines&lt;&#x2F;h5&gt;
&lt;p&gt;As mentioned above, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sparkfish&#x2F;augraphy&quot;&gt;Augraphy&lt;&#x2F;a&gt; can synthetically generate
&amp;quot;scanned&amp;quot; or otherwise distorted PDFs from existing PDFs.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clovaai&#x2F;donut&#x2F;tree&#x2F;master&#x2F;synthdog&quot;&gt;SynthDoG&lt;&#x2F;a&gt; was developed as part of the
&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;2111.15664.pdf&quot;&gt;OCR-free Document Understanding Transformer&lt;&#x2F;a&gt; paper. It
produces synthetic documents by taking the following steps:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;randomly select background images randomly from imagenet&lt;&#x2F;li&gt;
&lt;li&gt;randomly select &amp;quot;paper texture&amp;quot; from photos of paper&lt;&#x2F;li&gt;
&lt;li&gt;apply random distortion to paper texture&lt;&#x2F;li&gt;
&lt;li&gt;generate a random grid-based layout of text boxes of differing sizes and locations&lt;&#x2F;li&gt;
&lt;li&gt;randomly select font, style, and size of text&lt;&#x2F;li&gt;
&lt;li&gt;fill the text boxes with text from wikipedia&lt;&#x2F;li&gt;
&lt;li&gt;post-process the image&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;See appendix A.2 of the linked paper for more details. This seems like a neat pipeline.&lt;&#x2F;p&gt;
&lt;p&gt;SynthDoG seems to be a more advanced version of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clovaai&#x2F;synthtiger&quot;&gt;synthtiger&lt;&#x2F;a&gt;,
which takes many of the same steps.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;ideas-for-generating-pdf-documents-for-medical-data-extraction&quot;&gt;Ideas for generating PDF documents for medical data extraction&lt;&#x2F;h4&gt;
&lt;p&gt;At this point, I&#x27;m thinking about extracting medical data from PDFs as a mix of two kinds of tasks.
The first is &lt;a href=&quot;https:&#x2F;&#x2F;noamf.ink&#x2F;posts&#x2F;pdf-parsing-tasks&#x2F;#forms-parsing&quot;&gt;form parsing&lt;&#x2F;a&gt;, which will be
relevant when the PDF has distinct entry fields for specific pieces of information. This is often
the case with demographic information, lab test results, vital signs, prescriptions, etc. The second
is closer to 
&lt;a href=&quot;https:&#x2F;&#x2F;noamf.ink&#x2F;posts&#x2F;pdf-parsing-tasks&#x2F;#document-question-answering&quot;&gt;question answering&lt;&#x2F;a&gt;, which will
be relevant when the information is contained in free-text clinical notes. This often happens when
we&#x27;re interested in medical histories, the specifics of a procedure or radiology diagnosis, or
patient symptoms.&lt;&#x2F;p&gt;
&lt;p&gt;Regardless of how or whence we extract the information, the task is variation of Key Information
Extraction (KIE). For each potential FHIR field, we would like to know if the field is present in
the document, and if so what its value is.&lt;&#x2F;p&gt;
&lt;p&gt;Generating realistic medical PDFs will involve creating randomly generated plausible layouts for
structured medical information of the type that can be generated by 
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;synthetichealth&#x2F;synthea&quot;&gt;Synthea&lt;&#x2F;a&gt;, and using LLMs to to generate plausible
clinical notes that encode known pieces of information. Combining these elements with the synthetic
data generation pipelines linked above, I think it might be possible to train a Document AI model for
medical KIE.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;next-steps&quot;&gt;Next steps&lt;&#x2F;h4&gt;
&lt;p&gt;In the next post, we&#x27;ll take a look at evaluating some pre-trained OCR and Document AI models on
medical information extraction tasks. Depending on the results, we might explore creating realistic
synthetic medical documents for improved medical KIE training.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Benchmarking Tasks for Document Analysis</title>
        <published>2024-02-07T00:00:00+00:00</published>
        <updated>2024-02-08T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://noamf.ink/posts/pdf-parsing-tasks/"/>
        <id>https://noamf.ink/posts/pdf-parsing-tasks/</id>
        
        <content type="html" xml:base="https://noamf.ink/posts/pdf-parsing-tasks/">&lt;p&gt;This is the first post in a &lt;a href=&quot;https:&#x2F;&#x2F;noamf.ink&#x2F;posts&#x2F;pdf-parsing-series-intro&#x2F;&quot;&gt;series&lt;&#x2F;a&gt; on document
parsing. I&#x27;m starting with a review of the benchmarking tasks because I want to understand which 
problems the field is orienting itself around, and how they relate to the challenges of 
&lt;a href=&quot;https:&#x2F;&#x2F;noamf.ink&#x2F;posts&#x2F;pdf-parsing-series-intro&#x2F;#challenges-in-extracting-medical-data-from-pdfs&quot;&gt;extracting data from medical Documents&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;huggingface.co&#x2F;blog&#x2F;document-ai&quot;&gt;Accelerating Document AI&lt;&#x2F;a&gt; post by Hugging Face covers
some of the same ground. It was helpful context in writing this post and is worth a read.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ll update this post as I come across new relevant tasks.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;document-question-answering&quot;&gt;Document Question Answering&lt;&#x2F;h4&gt;
&lt;p&gt;The document question answer task takes a document (PDF, image, or text) and a natural language
question about the document as inputs, and produces a natural language answer to that question as an
output.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;rajpurkar.github.io&#x2F;SQuAD-explorer&#x2F;&quot;&gt;SQuAD2.0&lt;&#x2F;a&gt; dataset is a dataset in which the
documents are text (extracted from wikipedia articles), the questions are English, and each question
is paired with one or more related substrings of the corresponding document, or a special token
indicating that the question is not answered in the document. There are ~500 documents, with
~100,000 question-answer pairs, and an additional ~50,000 adversarial questions that seem like they
might be answered in the document but are not. &lt;&#x2F;p&gt;
&lt;p&gt;These documents are not PDFs, but might be used to train the language part of a PDF parsing model.
In the worst case, they can be automatically converted to either scanned or digital PDF format with
simulated visual artifacts.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;www.docvqa.org&#x2F;&quot;&gt;DocVQA&lt;&#x2F;a&gt; collection has 4 distinct data sets. The 
&lt;a href=&quot;https:&#x2F;&#x2F;www.docvqa.org&#x2F;datasets&#x2F;docvqa&quot;&gt;DocVQA&lt;&#x2F;a&gt; dataset has ~12,000 images with ~50,000 questions.
Answers are also text extracted from the given document image. There are also similar, smaller
datasets for Infographics (rather than documents) and handwritten documents. The final dataset
groups documents into a &lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2104.14336&quot;&gt;collection&lt;&#x2F;a&gt;, and any document in the
collection can be used to answer the question.&lt;&#x2F;p&gt;
&lt;p&gt;The datasets can be downloaded &lt;a href=&quot;https:&#x2F;&#x2F;rrc.cvc.uab.es&#x2F;?ch=17&amp;amp;com=downloads&quot;&gt;here&lt;&#x2F;a&gt;, after creation
of an account.&lt;&#x2F;p&gt;
&lt;p&gt;The related &lt;a href=&quot;https:&#x2F;&#x2F;benchmarks.elsa-ai.eu&#x2F;?ch=2&amp;amp;com=downloads&quot;&gt;PFL-DocVQA&lt;&#x2F;a&gt; dataset, which has
~1,000,000 question-answer pairs on ~110,000 documents in total. At the moment, it seems only
~250,000 are public, but the remainder should be published soon.&lt;&#x2F;p&gt;
&lt;p&gt;Both &lt;a href=&quot;https:&#x2F;&#x2F;rrc.cvc.uab.es&quot;&gt;https:&#x2F;&#x2F;rrc.cvc.uab.es&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;benchmarks.elsa-ai.eu&quot;&gt;https:&#x2F;&#x2F;benchmarks.elsa-ai.eu&lt;&#x2F;a&gt;, which host the DocVQA and
PFL-DocVQA datasets respectively also have other interesting image-to-text datasets that might be
useful for pre-training parts of a document model.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;rrc.cvc.uab.es&#x2F;?ch=23&amp;amp;com=introduction&quot;&gt;DUDE&lt;&#x2F;a&gt; data set contains ~5,000 PDF documents,
with ~20,000 question-answer pairs. Questions can be &lt;em&gt;extractive&lt;&#x2F;em&gt;, in which case the answer must
appear in the document, as for the datasets above, or &lt;em&gt;abstractive&lt;&#x2F;em&gt;, in which case the answer does
not appear in the document.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adlnlp&#x2F;pdfvqa#document-image-and-layout-structure-pickle-files&quot;&gt;PDF-VQA&lt;&#x2F;a&gt; is
also a visual question answer dataset. The authors point to the multi-page documents as the main
differentiator from DocVQA. It contains ~12,000 single-page documents, and ~1,100 multi-page
documents. It also contains ~140,000 question-answer pairs, and information about the logical and
spatial relation of words in the document. The &amp;quot;relational graphs&amp;quot; that encode these relationships
are described in section 3.2 of the the &lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;2304.06447.pdf&quot;&gt;accompanying paper&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;document-classification&quot;&gt;Document Classification&lt;&#x2F;h4&gt;
&lt;p&gt;Document classification is what it sounds like.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;paperswithcode.com&#x2F;dataset&#x2F;rvl-cdip&quot;&gt;RVL-CDIP&lt;&#x2F;a&gt; dataset contains ~400,000 images of
documents, each of which is assigned to one of 16 classes. The leaderboard is 
&lt;a href=&quot;https:&#x2F;&#x2F;paperswithcode.com&#x2F;sota&#x2F;document-image-classification-on-rvl-cdip&quot;&gt;here&lt;&#x2F;a&gt;, and can be
downloaded &lt;a href=&quot;https:&#x2F;&#x2F;adamharley.com&#x2F;rvl-cdip&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;www.kaggle.com&#x2F;datasets&#x2F;patrickaudriaz&#x2F;tobacco3482jpg&quot;&gt;Tobacco3482&lt;&#x2F;a&gt; dataset contains a
~3,492 images classified into 10 categories.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;document-layout-analysis&quot;&gt;Document Layout Analysis&lt;&#x2F;h4&gt;
&lt;p&gt;The layout analysis task aims to segment the documents into blocks, and classify each block. Common
block labels are things like &lt;em&gt;text&lt;&#x2F;em&gt;, &lt;em&gt;title&lt;&#x2F;em&gt;, &lt;em&gt;figure&lt;&#x2F;em&gt;, &lt;em&gt;table&lt;&#x2F;em&gt;, etc.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ibm-aur-nlp&#x2F;PubLayNet#getting-data&quot;&gt;PubLayNet&lt;&#x2F;a&gt; contains ~360,000 scientific
papers drawn from PubMed. The dataset was constructed by &amp;quot;automatically matching XML representations
and the contents&amp;quot; of the papers.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;document-parsing&quot;&gt;Document Parsing&lt;&#x2F;h4&gt;
&lt;p&gt;The document parsing task aims to extract specific kinds of information from a document. In the case
of forms, the goal is to extract key-value pairs, where each key is the name of a form-field, and
the value is the user-entered text for that field. This is also sometimes called Key Information
Extraction (KIE). Form and table parsing may be especially relevant to pulling information from
medical records. &lt;&#x2F;p&gt;
&lt;h5 id=&quot;forms-parsing&quot;&gt;Forms Parsing&lt;&#x2F;h5&gt;
&lt;p&gt;The Form Understanding from Noisy Scanned Documents 
(&lt;a href=&quot;https:&#x2F;&#x2F;guillaumejaume.github.io&#x2F;FUNSD&#x2F;download&#x2F;&quot;&gt;FUNDS&lt;&#x2F;a&gt;) dataset has ~200 forms, with
information about words and their locations, &lt;em&gt;semantic entities&lt;&#x2F;em&gt; — collections of related
words —, and relations links between key-value pairs. 
&lt;a href=&quot;https:&#x2F;&#x2F;guillaumejaume.github.io&#x2F;FUNSD&#x2F;description&#x2F;&quot;&gt;Here&lt;&#x2F;a&gt; is a nice summary-by-example of the data
available on each form.&lt;&#x2F;p&gt;
&lt;p&gt;The related &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;doc-analysis&#x2F;XFUND&quot;&gt;XFUND&lt;&#x2F;a&gt; dataset extends this idea to documents in
other languages. The dataset repository doesn&#x27;t have much information, but it&#x27;s described in the
&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2104.08836v3&quot;&gt;LayoutXLM&lt;&#x2F;a&gt; paper. XFUND contains ~1,400 annotated forms, at
~200 per language. The dataset contains standard OCR data (i.e. words with bounding boxes), as well
as semantically significant sets of words, each of which is called a &lt;em&gt;semantic entity&lt;&#x2F;em&gt;. It also
contains annotated key-value pairs; a major goal is identifying the value associated with a given
key.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;table-parsing&quot;&gt;Table parsing&lt;&#x2F;h5&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;huggingface.co&#x2F;datasets&#x2F;bsmock&#x2F;pubtables-1m&quot;&gt;PubTables-1M&lt;&#x2F;a&gt; dataset contains ~575,000
pages, with a total of ~950,000 fully annotated tables. 
&lt;a href=&quot;https:&#x2F;&#x2F;user-images.githubusercontent.com&#x2F;10793386&#x2F;139559159-cd23c972-8731-48ed-91df-f3f27e9f4d79.jpg&quot;&gt;Table annotations&lt;&#x2F;a&gt;
include column headers and &lt;em&gt;projected row headers&lt;&#x2F;em&gt;, which are used to subdivide the table into
vertical sections (see the linked image for an example). The dataset can also be used to learn to
identify tables in documents. &lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;developer.ibm.com&#x2F;exchanges&#x2F;data&#x2F;all&#x2F;fintabnet&#x2F;&quot;&gt;FinTabNet&lt;&#x2F;a&gt; dataset &amp;quot;contains complex
tables from the annual reports of S&amp;amp;P 500 companies with detailed table structure annotations&amp;quot;. It
has ~90,000 pages with ~110,000 tables. The annotations here seem to just indicate a bounding box
for each &lt;em&gt;table&lt;&#x2F;em&gt;, and a bounding box for each &lt;em&gt;cell&lt;&#x2F;em&gt; in the table. See the bottom of 
&lt;a href=&quot;https:&#x2F;&#x2F;dataplatform.cloud.ibm.com&#x2F;analytics&#x2F;notebooks&#x2F;v2&#x2F;f57cf3f6-e972-48ff-ab7b-3771ba7b9683&#x2F;view?access_token=317644327d84f5d75b4782f97499146c78d029651a7c7ace050f4a7656033c30&quot;&gt;this notebook&lt;&#x2F;a&gt; for examples.&lt;&#x2F;p&gt;
&lt;p&gt;On first look, it doesn&#x27;t seem that either dataset includes a class for the kinds of notes that 
often appear in lab test reports 
(&lt;a href=&quot;https:&#x2F;&#x2F;www.researchgate.net&#x2F;profile&#x2F;John-Flach&#x2F;publication&#x2F;267494297&#x2F;figure&#x2F;fig1&#x2F;AS:392037380706311@1470480403318&#x2F;An-example-of-a-typical-format-used-to-report-results-of-blood-analysis-to-the-physician.png&quot;&gt;example 1&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;i.pinimg.com&#x2F;736x&#x2F;8e&#x2F;a6&#x2F;ef&#x2F;8ea6efe0d12a1a580e8d1b3390a3e066.jpg&quot;&gt;example 2&lt;&#x2F;a&gt;).
These kinds of notes often disrupt table recognition, as the same column headers apply above and
below the note. I&#x27;ve had trouble in the past where table identifiers either considered the parts of
a table separated by a note to be distinct tables, or else only recognized the part of the table
that precedes the note, as the remaining parts do not have identifiable column headers. &lt;&#x2F;p&gt;
&lt;p&gt;Because the FinTabNet does not contain semantic information about table structure, models trained
on it might be better able to recognize the notes as distinct cells; this will be interesting to
explore.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;receipts-parsing&quot;&gt;Receipts Parsing&lt;&#x2F;h5&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;rrc.cvc.uab.es&#x2F;?ch=13&amp;amp;com=introduction&quot;&gt;SROIE dataset&lt;&#x2F;a&gt; has ~1,000 receipt images. Each
receipt is annotated with standard word &#x2F; bounding box information, as well as a number of key-value
pairs (the example keys given are &lt;em&gt;company&lt;&#x2F;em&gt;, &lt;em&gt;date&lt;&#x2F;em&gt;, &lt;em&gt;address&lt;&#x2F;em&gt;, and &lt;em&gt;total&lt;&#x2F;em&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clovaai&#x2F;cord&quot;&gt;CORD&lt;&#x2F;a&gt; dataset has ~1,0000 receipts. Each receipt is annotated
with word &#x2F; bounding box information, as well as line-level and receipt-level classifications.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;datasets-in-other-languages&quot;&gt;Datasets in other languages&lt;&#x2F;h5&gt;
&lt;p&gt;I&#x27;ll focus on English datasets for now, both because I can read English and because the documents
I&#x27;m interested in working with are in English. There are interesting datasets in other languages,
especially in Chinese. In particular, the &lt;a href=&quot;https:&#x2F;&#x2F;rrc.cvc.uab.es&#x2F;?ch=21&quot;&gt;HUSTL-CELL&lt;&#x2F;a&gt; dataset looks
relevant to key information extraction, and is primarily in Chinese.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h4&gt;
&lt;p&gt;This post is meant to provide an overview of the kinds of tasks that are currently used to evaluate
methods for Document AI. The corresponding datasets can be used for training or fine-tuning as well.&lt;&#x2F;p&gt;
&lt;p&gt;My overall impression is that there is low availability of large, high-quality annotated datasets,
especially for the &lt;a href=&quot;https:&#x2F;&#x2F;noamf.ink&#x2F;posts&#x2F;pdf-parsing-tasks&#x2F;#document-parsing&quot;&gt;parsing&lt;&#x2F;a&gt;-based tasks. This seems to be a bottleneck for
training, though perhaps less so for evaluation.&lt;&#x2F;p&gt;
&lt;p&gt;In the next post in the series, we&#x27;ll look at unlabeled datasets that can be used for
self-supervised pre-training. I will be especially interested in methods for generating synthetic
labeled data. For medical document information extraction, it may be relevant to see if plausible
documents of varied structures can be created using synthetic FHIR data from 
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;synthetichealth&#x2F;synthea&quot;&gt;Synthea&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>A Series of posts about Document AI</title>
        <published>2024-02-06T00:00:00+00:00</published>
        <updated>2024-02-08T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://noamf.ink/posts/pdf-parsing-series-intro/"/>
        <id>https://noamf.ink/posts/pdf-parsing-series-intro/</id>
        
        <content type="html" xml:base="https://noamf.ink/posts/pdf-parsing-series-intro/">&lt;p&gt;This is an introductory post for a series on AI for analyzing PDFs. The posts in the series are 
listed below. &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;noamf.ink&#x2F;posts&#x2F;pdf-parsing-tasks&#x2F;&quot;&gt;Tasks&lt;&#x2F;a&gt; — On established benchmarking tasks in the
literature&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;noamf.ink&#x2F;posts&#x2F;pdf-parsing-datasets&#x2F;&quot;&gt;Datasets&lt;&#x2F;a&gt; — On available labeled and unlabeld
PDF datasets&lt;&#x2F;li&gt;
&lt;li&gt;Models — On published model architectures and weights&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This list will be updated as the posts are written.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;m not an expert in document modeling, and I might make obvious or silly mistakes along the way. If
you spot any, or have other questions or comments, please 
&lt;a href=&quot;mailto:noamf.ink@proton.me&quot;&gt;let me know&lt;&#x2F;a&gt;! &lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;m writing this series as a way of documenting and organizing my preliminary explorations of this
field; I hope it will useful to others as well.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;motivation-for-catching-up-on-state-of-the-art-ai-for-pdfs&quot;&gt;Motivation for catching up on state-of-the-art AI for PDFs&lt;&#x2F;h4&gt;
&lt;p&gt;There&#x27;s a lot of medical information that only exists in PDF documents. Much of this information is
old, from the days before the 
&lt;a href=&quot;https:&#x2F;&#x2F;www.hhs.gov&#x2F;hipaa&#x2F;for-professionals&#x2F;special-topics&#x2F;hitech-act-enforcement-interim-final-rule&#x2F;index.html&quot;&gt;HITECH&lt;&#x2F;a&gt;
act kicked off the EHR revolution. While most newer clinical information is stored digitally
&lt;em&gt;somewhere&lt;&#x2F;em&gt;, patients and even healthcare providers can often access it only in PDF form.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve long been interested in pulling medical data out of scanned PDF documents. Part of this is a 
personal interest — I have a stack of physical documents representing decades of my family&#x27;s
medical histories. &lt;&#x2F;p&gt;
&lt;p&gt;But I also have a professional interest in this problem. In nearly a decade of working on EHR-based
precision medicine, I&#x27;ve seen many situations in which critically important information is only
accessible in PDF form.&lt;&#x2F;p&gt;
&lt;p&gt;Historically, extracting data from PDFs — especially scanned PDFs — has been tedious and
error-prone. The biggest reason for this is that the PDF format is a visual rather than semantic
encoding, and the spatial elements of PDF forms are rarely consistent between hospitals or clinics,
or even within a single clinic over time.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s been about two years since I looked seriously at the state-of-the-art in PDF parsing, and a lot
has changed in the world of AI in that time. I&#x27;m curious at how much closer we are to solving this
problem in the era of massive open-source models.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;challenges-in-extracting-medical-data-from-pdfs&quot;&gt;Challenges in extracting medical data from PDFs&lt;&#x2F;h4&gt;
&lt;p&gt;The most general formulation of the task I&#x27;m interested is this:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Given a digital or scanned PDF, produce a structured
&lt;a href=&quot;https:&#x2F;&#x2F;www.hl7.org&#x2F;fhir&#x2F;documentation.html&quot;&gt;FHIR&lt;&#x2F;a&gt; document that contains all clinical information
present in the original PDF, including clinical notes text.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The FHIR format is the industry standard format for storing and transfering clinical information.&lt;&#x2F;p&gt;
&lt;p&gt;There are a few challenges involved in this task that may be somewhat non-standard. It&#x27;s not
necessary to solve all of these challenges for automated PDF parsing to be useful, but it will be
interesting to see whether and how they&#x27;re addressed in existing models and benchmarking tasks. A
few of these challenges are listed below.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;We don&#x27;t know what information will be present in any given PDF.&lt;&#x2F;li&gt;
&lt;li&gt;Each PDF may contain print and handwritten text.&lt;&#x2F;li&gt;
&lt;li&gt;Some PDFs contain information on multiple procedures or tests across many distinct dates.&lt;&#x2F;li&gt;
&lt;li&gt;The same medical concept may have many different names.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;There are also simpler tasks that might still be useful, such as extracting specific demographic
or clinical information, or all clinical notes, from a document if available.&lt;&#x2F;p&gt;
&lt;p&gt;In the past, I&#x27;ve had some success running scanned documents through OCR, and then writing
rules-based engines to pull vitals and labs values on the basis of spatial orientation and a few
other factors. &lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s possible to write these rules in a relatively robust way, but a rules-based approach will
always be fragile. First, medical forms are notorious for the variety of their spatial patterns.
Second, because the OCR engine is not connected to any medical knowledge, it doesn&#x27;t know to correct
for character- or token-level mistakes that are obvious in context. Making these corrections
post-hoc is possible, but it adds substantial engineering and computational complexity. I&#x27;m
especially curious about whether and how newer methods are integrating the linguistic and clinical
context into the character recognition process.&lt;&#x2F;p&gt;
&lt;p&gt;My hope is that it will be possible to build on modern approaches and open-source models for PDF
parsing to avoid rules-based systems, and to expand the kinds of information it&#x27;s possible to
extract beyond just simple labs and vitals. &lt;&#x2F;p&gt;
&lt;h4 id=&quot;order-of-posts-in-the-series&quot;&gt;Order of posts in the series&lt;&#x2F;h4&gt;
&lt;p&gt;In my experience, machine-learning methods often optimize for recongized and established
benchmarking tasks in their sub-field. Understanding these tasks in detail from the start can help
get sense for how the field is orienting itself. The next post in the series will be about relevant
benchmarking tasks.&lt;&#x2F;p&gt;
&lt;p&gt;Next, I&#x27;ll take a look at available datasets, as well as the feasibility of generating realistic
data for training purposes. I find this is also helpful to do before reading about specific models,
as it provides context for which objectives models are trained against, and when it&#x27;s possible to
use self-supervised objectives.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, I&#x27;ll take a closer look at existing model architectures and open-source models. This part
of the series may expand into several posts about testing out, fine-tuning or altering existing
models.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
